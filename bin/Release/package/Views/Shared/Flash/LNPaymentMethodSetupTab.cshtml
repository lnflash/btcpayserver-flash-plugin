@model BTCPayServer.Models.StoreViewModels.LightningNodeViewModel
@{
    var storeId = Model.StoreId;
    if (Model.CryptoCode != "BTC")
    {
        return;
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {

        const customNodeAccordian = document.getElementById("CustomNodeSupport");
        const template = document.getElementById("flash");
        customNodeAccordian.appendChild(template.content.cloneNode(true));

    });
</script>

<template id="flash">
    <div class="accordion-item">
        <h2 class="accordion-header" id="CustomFlashHeader">
            <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse"
                data-bs-target="#CustomFlashContent" aria-controls="CustomFlashContent" aria-expanded="false">
                <span><strong>Flash</strong> via GraphQL</span>
                <vc:icon symbol="caret-down" />
            </button>
        </h2>
        <div id="CustomFlashContent" class="accordion-collapse collapse" aria-labelledby="CustomFlashHeader"
            data-bs-parent="#CustomNodeSupport">
            <div class="accordion-body">
                <ul class="pb-2">
                    <li>
                        <code><b>type=</b>flash;<b>server=</b>https://api.flashapp.me/graphql;<b>token=</b>your_bearer_token</code>
                    </li>
                </ul>
                <p class="my-2">Head over to the <a href="https://flashapp.me/dashboard" target="_blank"
                        rel="noreferrer noopener">Flash dashboard</a> and generate a Bearer token for API access. The
                    server parameter is optional and
                    will default to the main Flash API endpoint if not specified.</p>
            </div>
        </div>
    </div>
</template>